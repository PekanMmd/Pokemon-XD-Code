%YAML 1.2
---

name: XDScript
file_extensions:
  - xds
scope: xdscript

variables:
  unicode: '\\\h{1,6}[ \t\n\f]?'
  escape: '(?:{{unicode}}|\\[^\n\f\h])'
  nonascii: '[\p{L}\p{M}\p{S}\p{N}&&[^[:ascii:]]]'
  nmstart: '(?:[[_a-zA-Z]{{nonascii}}]|{{escape}})'
  nmchar: '(?:[[-\w]{{nonascii}}]|{{escape}})'
  ident: '(?:--{{nmchar}}+|-?{{nmstart}}{{nmchar}}*)'
  integer: '(?:[-+]?\d+)'
  number: '[-+]?(?:(?:\d*\.\d+(?:[eE]{{integer}})*)|{{integer}})'

contexts:

  prototype:
    - include: macros
    - include: comments

  main:
    - match: \b(define|exec|assign|return)\b
      scope: keyword.control.c
    - match: '!=|=|<|>|-|/'
      scope: keyword.operator
    - match: '\+'
      scope: keyword.operator
    - match: '\*'
      scope: keyword.operator
    - match: '"'
      push: string
    - match: \(
      push: brackets
    - match: \)
      scope: invalid.illegal.stray-bracket-end
    - match: \b(goto)\b
      push: goto
    - match: '\b{{number}}\b'
      scope: constant.numeric
    - match: '(.*_object)(.*)\.'
      scope: keyword.control.c

  goto:
    - meta_include_prototype: false
    - meta_scope: keyword.control.c
    - match: \b(if|ifFalse)\b
      pop: true
    - match: '\n'
      pop: true
    - match: '@\b{{ident}}\b'
      scope: constant.numeric

  string:
    - meta_scope: string.quoted.double.c
    - match: \\.
      scope: constant.character.escape.c
    - match: '"'
      pop: true

  brackets:
    - match: \)
      pop: true
    - include: main

  macros:
    - match: '#\b{{ident}}\b'
      scope: string.quoted.single
    - match: '@\b{{ident}}\b'
      scope: entity.name.interface

  comments:
    - match: '\\'
      push: comment

  comment:
    - meta_scope: comment.line
    - match: '\n'
      pop: true





